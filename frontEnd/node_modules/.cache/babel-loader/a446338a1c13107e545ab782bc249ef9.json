{"ast":null,"code":"var _jsxFileName = \"C:\\\\DATA\\\\redux-counter\\\\src\\\\features\\\\Counter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { increment, decrement, changeByValue, selectCount } from \"./counterSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [value, setValue] = useState();\n\n  const handleChange = e => {\n    const num = parseInt(e.target.value);\n    setValue(num);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Counter app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(increment()),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(decrement()),\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(changeByValue(value)),\n      children: \"Change by Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => handleChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Counter, \"1VlIg9lOsEq6mqShstzOAp6kdgo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["C:/DATA/redux-counter/src/features/Counter.js"],"names":["React","useState","useDispatch","useSelector","increment","decrement","changeByValue","selectCount","Counter","count","dispatch","value","setValue","handleChange","e","num","parseInt","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,aAHF,EAIEC,WAJF,QAKO,gBALP;;;;AAOA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,KAAK,GAAGN,WAAW,CAACI,WAAD,CAAzB;AACA,QAAMG,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,EAAlC;;AAEA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAMC,GAAG,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASN,KAAV,CAApB;AACAC,IAAAA,QAAQ,CAACG,GAAD,CAAR;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,4BAAWN,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACN,SAAS,EAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAMM,QAAQ,CAACL,SAAS,EAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAE,MAAMK,QAAQ,CAACJ,aAAa,CAACK,KAAD,CAAd,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AAAO,MAAA,QAAQ,EAAGG,CAAD,IAAOD,YAAY,CAACC,CAAD;AAApC;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAYD,CAtBD;;GAAMN,O;UACUL,W,EACGD,W;;;KAFbM,O;AAwBN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  increment,\r\n  decrement,\r\n  changeByValue,\r\n  selectCount\r\n} from \"./counterSlice\";\r\n\r\nconst Counter = () => {\r\n  const count = useSelector(selectCount);\r\n  const dispatch = useDispatch();\r\n  const [value, setValue] = useState();\r\n  \r\n  const handleChange = (e) => {\r\n    const num = parseInt(e.target.value);\r\n    setValue(num);\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <h1>Counter app</h1>\r\n      <p>Count: {count}</p>\r\n      <button onClick={() => dispatch(increment())}>Increment</button>\r\n      <button onClick={() => dispatch(decrement())}>Decrement</button>\r\n      <button onClick={() => dispatch(changeByValue(value))}>\r\n        Change by Value\r\n      </button>\r\n      <input onChange={(e) => handleChange(e)} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\"; // populate the core of our Redux logic in Slice\n// createSlice is a function that accepts an initial state, an object full of reducer functions, and a \"slice name\", and automatically generates action creators and action types that correspond to the reducers and state.\n\nconst initialState = {\n  value: 0\n};\nconst Slice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.value++;\n    },\n\n    decrement(state) {\n      state.value--;\n    },\n\n    incrementByAmount(state, action) {\n      state.value += action.payload;\n    }\n\n  }\n});\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = Slice.actions;\nexport default Slice.reducer;","map":{"version":3,"sources":["C:/DATA/redux-counter/src/features/counterSlide.js"],"names":["createSlice","initialState","value","Slice","name","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CAGA;AACA;;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAArB;AAEA,MAAMC,KAAK,GAAGH,WAAW,CAAC;AACxBI,EAAAA,IAAI,EAAE,SADkB;AAExBH,EAAAA,YAFwB;AAGxBI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACL,KAAN;AACD,KAHO;;AAIRM,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACL,KAAN;AACD,KANO;;AAORO,IAAAA,iBAAiB,CAACF,KAAD,EAAQG,MAAR,EAAgB;AAC/BH,MAAAA,KAAK,CAACL,KAAN,IAAeQ,MAAM,CAACC,OAAtB;AACD;;AATO;AAHc,CAAD,CAAzB;AAgBA,OAAO,MAAM;AAAEL,EAAAA,SAAF;AAAaE,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,IAA8CN,KAAK,CAACS,OAA1D;AACP,eAAeT,KAAK,CAACU,OAArB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\n// populate the core of our Redux logic in Slice\r\n// createSlice is a function that accepts an initial state, an object full of reducer functions, and a \"slice name\", and automatically generates action creators and action types that correspond to the reducers and state.\r\n\r\nconst initialState = { value: 0 }\r\n\r\nconst Slice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.value++\r\n    },\r\n    decrement(state) {\r\n      state.value--\r\n    },\r\n    incrementByAmount(state, action) {\r\n      state.value += action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const { increment, decrement, incrementByAmount } = Slice.actions\r\nexport default Slice.reducer"]},"metadata":{},"sourceType":"module"}